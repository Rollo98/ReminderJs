{"version":3,"sources":["components/App.js","actions/index.js","actions/types.js","reducers/index.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","dueDate","addReminder","id","deleteReminder","_this2","reminders","react_default","a","createElement","className","map","reminder","key","moment","Date","fromNow","onClick","_this3","placeholder","onChange","event","setState","target","value","type","renderReminders","clearAll","Component","connect","action","Math","random","arguments","length","undefined","read_cookie","concat","toConsumableArray","bake_cookie","filter","removeById","store","createStore","reducer","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1641656a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addReminder, deleteReminder, clearAll } from \"../actions/index\";\nimport moment from \"moment\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      dueDate: \"\"\n    };\n  }\n\n  addReminder(text, dueDate) {\n    this.props.addReminder(this.state.text, this.state.dueDate);\n  }\n\n  deleteReminder(id) {\n    this.props.deleteReminder(id);\n  }\n\n  renderReminders() {\n    const { reminders } = this.props;\n    return (\n      <ul className=\"list-group\">\n        {reminders.map(reminder => {\n          return (\n            <div className=\"row\">\n              <li key={reminder.id} className=\"list-group-item mt-2 mb-2 col\">\n                <div className=\"list-item d-inline-block\">\n                  <div>{reminder.text}</div>\n                  <div>\n                    <em>{moment(new Date(reminder.dueDate)).fromNow()}</em>\n                  </div>\n                </div>\n              </li>\n              <button\n                className=\"list-item d-inline-block button btn btn-danger ml-2 col\"\n                onClick={() => this.deleteReminder(reminder.id)}\n              >\n                &#x2715;\n              </button>\n            </div>\n          );\n        })}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App text-center\">\n        <div className=\"title\">Reminder online!</div>\n        <div className=\"form mt-2 mb-2\">\n          <div className=\"form-group \">\n            <input\n              className=\"form-control mt-2 mb-2\"\n              placeholder=\"I have to ...\"\n              onChange={event => this.setState({ text: event.target.value })}\n            />\n            <input\n              className=\"form-control mt-2 mb-2\"\n              type=\"datetime-local\"\n              onChange={event => this.setState({ dueDate: event.target.value })}\n            />\n          </div>\n          <button\n            className=\"btn btn-success\"\n            type=\"button\"\n            onClick={() => this.addReminder()}\n          >\n            Add Reminder\n          </button>\n          {this.renderReminders()}\n        </div>\n        <button\n          className=\"btn btn-danger\"\n          onClick={() => this.props.clearAll()}\n        >\n          Clear all\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { reminders: state };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addReminder, deleteReminder, clearAll }\n)(App);\n","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_ALL } from \"./types\";\n\nexport const addReminder = (text, dueDate) => {\n  const action = {\n    type: ADD_REMINDER,\n    text,\n    dueDate\n  };\n  return action;\n};\n\nexport const deleteReminder = id => {\n  const action = {\n    type: DELETE_REMINDER,\n    id\n  };\n  return action;\n};\n\nexport const clearAll = () => {\n  const action = {\n    type: CLEAR_ALL\n  };\n  return action;\n};\n","export const ADD_REMINDER = \"ADD_REMINDER\";\nexport const DELETE_REMINDER = \"DELETE_REMINDER\";\nexport const CLEAR_ALL = \"CLEAR_ALL\";\n","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_ALL } from \"../actions/types\";\nimport { bake_cookie, read_cookie } from \"sfcookies\";\n\nconst reminder = action => {\n  let { text, dueDate } = action;\n  return {\n    id: Math.random(),\n    text,\n    dueDate\n  };\n};\n\nconst removeById = (state = [], id) => {\n  const reminders = state.filter(reminder => reminder.id !== id);\n  return reminders;\n};\n\nconst reminders = (state = [], action) => {\n  let reminders = null;\n  state = read_cookie(\"reminders\");\n  switch (action.type) {\n    case ADD_REMINDER:\n      reminders = [...state, reminder(action)];\n      bake_cookie(\"reminders\", reminders);\n      return reminders;\n    case DELETE_REMINDER:\n      reminders = removeById(state, action.id);\n      bake_cookie(\"reminders\", reminders);\n      return reminders;\n    case CLEAR_ALL:\n      reminders = [];\n      bake_cookie(\"reminders\", reminders);\n      return reminders;\n    default:\n      return state;\n  }\n};\n\nexport default reminders;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}